--Data can be obtained from: https://zenodo.org/record/6323416#.YnDqkC8RrAA
--Sample Data used: https://drive.google.com/uc?export=download&id=1tGImE1WHTxCfi6NLJM4OSqalY8Dr-u63

--Q1 Creation of Database

CREATE TABLE POSITIONS (
	ID_ INT, 
	VESSEL_ID VARCHAR,
	DT TIMESTAMP, 
	LON DOUBLE PRECISION, 
	LAT DOUBLE PRECISION, 
	HEADING INT, 
	COURSE DOUBLE PRECISION, 
	SPEED DOUBLE PRECISION,
	PRIMARY KEY(ID_)
);

COPY POSITIONS(ID_,VESSEL_ID,DT,LON,LAT,HEADING,COURSE,SPEED) 
FROM 'E:\THALASSADB\POSITIONS.CSV'
WITH DELIMITER ',' CSV HEADER;

CREATE TABLE VESSELS (
	ID_ VARCHAR,
	TYPE_ INT, 
	FLAG_ CHAR(255), 
	PRIMARY KEY(ID_)
);

COPY VESSELS(ID_,TYPE_,FLAG_) 
FROM 'E:\THALASSADB\VESSELS.CSV'
WITH DELIMITER ',' CSV HEADER;

CREATE TABLE VESSELTYPES (
	CODE INT,
	DESCRIPTION CHAR(255),  
	PRIMARY KEY(CODE)
);

COPY VESSELTYPES(CODE,DESCRIPTION) 
FROM 'E:\THALASSADB\VESSELTYPES.CSV'
WITH DELIMITER ',' CSV HEADER;

CREATE TABLE PORTS (
	NAME_ CHAR(255),
	LON DOUBLE PRECISION, 
	LAT DOUBLE PRECISION,
	PRIMARY KEY(NAME_)
);

COPY PORTS(NAME_,LON,LAT) 
FROM 'E:\THALASSADB\PORTS.CSV'
WITH DELIMITER ',' CSV HEADER;

CREATE TABLE AIS (
	LON DOUBLE PRECISION, 
	LAT DOUBLE PRECISION
)

ALTER TABLE POSITIONS --ADD FOREIGN KEYS
ADD FOREIGN KEY (VESSEL_ID) REFERENCES VESSELS(ID_);

ALTER TABLE VESSELS --ADD FOREIGN KEYS
ADD FOREIGN KEY (TYPE_) REFERENCES VESSELTYPES(CODE);

CREATE TABLE AIS (
	LON DOUBLE PRECISION, 
	LAT DOUBLE PRECISION
);

INSERT INTO AIS(LON,LAT)
VALUES (23.652939, 37.941500)

INSERT INTO PORTS(NAME_,LON,LAT)
VALUES ('KERATSINI', 23.611026, 37.952880)

INSERT INTO PORTS(NAME_,LON,LAT)
VALUES ('DRAPETSONA', 23.624289, 37.942222)

INSERT INTO PORTS(NAME_,LON,LAT)
VALUES ('MIKROLIMANO', 23.661302, 37.936988)

SELECT ADDGEOMETRYCOLUMN ('AIS','GEOM', 4326,'POINT',2);
UPDATE AIS SET GEOM = ST_SETSRID(ST_MAKEPOINT(LON, LAT), 4326);

SELECT ADDGEOMETRYCOLUMN ('POSITIONS','GEOM',4326,'POINT',2);
UPDATE POSITIONS SET GEOM = ST_SETSRID(ST_MAKEPOINT(LON, LAT), 4326);

SELECT ADDGEOMETRYCOLUMN ('PORTS','GEOM',4326,'MULTIPOLYGON',2);
DELETE FROM PORTS WHERE NAME_='PIRAEUS';
INSERT INTO PORTS(NAME_,GEOM)
VALUES ('PIRAEUS', (SELECT GEOM FROM PIRAEUS_PORT)) --Import shape of Piraeus port from given shape file


--Q2 Are there ships that have emitted signals but there are not in the vessels table?

SELECT DISTINCT VESSEL_ID
FROM POSITIONS
WHERE VESSEL_ID NOT IN(
	SELECT ID_
	FROM VESSELS
)

--Q3 What is the nearest and farthest position that the antenna has recorded?

SELECT * FROM (SELECT POSITIONS.GEOM,ST_DISTANCE(POSITIONS.GEOM::GEOGRAPHY, AIS.GEOM::GEOGRAPHY) AS APOSTASI
FROM POSITIONS, AIS) ALIAS
GROUP BY ALIAS.GEOM,ALIAS.APOSTASI
HAVING 
APOSTASI = (SELECT MAX(APOSTASI) FROM(
SELECT ST_DISTANCE(POSITIONS.GEOM::GEOGRAPHY, AIS.GEOM::GEOGRAPHY) AS APOSTASI
FROM POSITIONS, AIS) SUBQUERY)  
OR 
APOSTASI =(SELECT MIN(APOSTASI) FROM(
SELECT ST_DISTANCE(POSITIONS.GEOM::GEOGRAPHY, AIS.GEOM::GEOGRAPHY) AS APOSTASI
FROM POSITIONS, AIS) SUBQUERY)

--Q4 Which ships at one time developed a speed of more than 30 knots? What type was it? How much per type?

SELECT TYPE_ , COUNT(*)
FROM VESSELS
WHERE VESSELS.ID_ IN(
	SELECT DISTINCT VESSEL_ID
	FROM POSITIONS
	WHERE SPEED>30)
GROUP BY TYPE_

SELECT VESSELS.TYPE_, VESSELTYPES.DESCRIPTION, COUNT(*)
FROM VESSELS
INNER JOIN VESSELTYPES
ON VESSELS.TYPE_=VESSELTYPES.CODE
WHERE VESSELS.ID_ IN(
	SELECT DISTINCT VESSEL_ID
	FROM POSITIONS
	WHERE SPEED>30)
GROUP BY VESSELS.TYPE_,VESSELTYPES.CODE, VESSELTYPES.DESCRIPTION

--Q5 Which cargo ships were anchored (zero speed) in the port of Piraeus at some point during the period 26-29/4/2019? Which for the entirity of that period?

SELECT DISTINCT POSIBLES.VESSEL_ID, POSIBLES.MESA FROM 
(SELECT * , ST_CONTAINS(GG.GEOM,POS.GEOM) AS MESA FROM 
(SELECT VESSEL_ID,DT,TYPE_,GEOM FROM POSITIONS
LEFT JOIN VESSELS ON VESSELS.ID_ = POSITIONS.VESSEL_ID
WHERE TYPE_ BETWEEN 70 AND 79 AND SPEED=0 AND DT>='2019-04-26' AND DT<'2019-04-30') AS POS,
(SELECT GEOM FROM PORTS WHERE NAME_='PIRAEUS') AS GG) AS POSIBLES
WHERE POSIBLES.MESA=TRUE


SELECT POSIBLES.VESSEL_ID, POSIBLES.MESA,POSIBLES.TYPE_  FROM 
(SELECT * , ST_CONTAINS(GG.GEOM,POS.GEOM) AS MESA FROM 
(SELECT VESSEL_ID,DT,TYPE_,GEOM , SPEED  FROM POSITIONS
LEFT JOIN VESSELS ON VESSELS.ID_ = POSITIONS.VESSEL_ID
WHERE DT>='2019-04-26' AND DT<'2019-04-30' ) AS POS,
(SELECT GEOM FROM PORTS WHERE NAME_='PIRAEUS') AS GG) AS POSIBLES
WHERE POSIBLES.MESA=TRUE
GROUP BY VESSEL_ID,TYPE_,POSIBLES.MESA
HAVING SUM(POSIBLES.SPEED) < 3

--Q6 Let's focus temporally on the period 29/4/2019 between 20:00 - 21:00, and spatially on the polygon of the port of Piraeus. Are there pairs of ships found close (distance < 0.5 Nautical miles) while underway (speed > 0)?

CREATE TABLE DATA9 AS (SELECT VESSEL_ID,LON,LAT,SPEED,DT, POSIBLES.DT-INTERVAL '30 SEC' AS DT_MIN, POSIBLES.DT+INTERVAL '30 SEC' AS DT_MAX FROM 
(SELECT * , ST_CONTAINS(GG.PORT,POS.GEOM) AS MESA FROM
(SELECT * FROM POSITIONS
WHERE SPEED>0 AND DT>='2019-04-29 20:00:00' AND DT<='2019-04-29 21:00:00') AS POS,
(SELECT GEOM AS PORT FROM PORTS WHERE NAME_='PIRAEUS') AS GG) POSIBLES
WHERE POSIBLES.MESA=TRUE

--q6.ipynb

--Q7_8
--For a specific passenger ship (which will be selected from the Vessels table) and a specific day (29/4/2019) for which we have previously ascertained that the ship gave signals, how many signals have been recorded? What is the minimum, average, and maximum time difference between two consecutive time points?
--Based on the consecutive positions, what is the maximum speed that particular ship developed on that day? Given the point geometry we have for ports, which of the ports was it close to (distance < 0.3 Nautical miles)?

CREATE TABLE SHIP557 AS (SELECT POSITIONS.* FROM
	(SELECT ID_ AS ID1_ FROM (
	  SELECT
		ROW_NUMBER() OVER (ORDER BY ID_ ASC) AS ROWNUMBER, *
	  FROM VESSELS
	) AS TEMP_TABLE
WHERE ROWNUMBER=557) FOO
INNER JOIN POSITIONS ON POSITIONS.VESSEL_ID=FOO.ID1_
WHERE DT>='2019-04-01' AND DT<'2019-04-02')

--q7_8.ipynb

--Q9 Are there signals related to the same ship and at the same time or even less than 5 seconds apart? If we found such record pairs, keep only one record and delete the other.

SELECT POS.* 
FROM POSITIONS POS
FULL OUTER JOIN 
(SELECT * FROM (SELECT ID_,VESSEL_ID, DT, DT - LAG(DT, 1) OVER (PARTITION BY VESSEL_ID ORDER BY DT ASC) AS DELTA 
FROM POSITIONS
ORDER BY VESSEL_ID, DT ASC) ABC
WHERE DELTA<MAKE_TIME(0,0,5)) DELETED
ON DELETED.ID_=POS.ID_
WHERE DELETED.ID_ IS NULL
ORDER BY VESSEL_ID, DT ASC

--Q10 Are there signals (Positions table) that indicate a speed greater than the maximum acceptable for the specific type of ship? If so, remove the entries that indicate a speed greater than the maximum acceptable for that type of ship.

ALTER TABLE VESSELTYPES
ADD COLUMN MAX_SPEED DOUBLE PRECISION

--Add experimental values for speed
UPDATE VESSELTYPES SET MAX_SPEED = CASE
	WHEN CODE BETWEEN 20 AND 29 THEN 55
   WHEN CODE = 30 THEN 20 
   WHEN CODE = 31 THEN 15 
   WHEN CODE = 32 THEN 20 
   WHEN CODE = 33 THEN 18 
   WHEN CODE = 34 THEN 20 
   WHEN CODE = 35 THEN 30 
   WHEN CODE = 36 THEN 14 
   WHEN CODE = 37 THEN 60 
   WHEN CODE BETWEEN 40 AND 49 THEN 45  
   WHEN CODE = 51 THEN 30
   WHEN CODE = 52 THEN 19
   WHEN CODE = 53 THEN 14
   WHEN CODE = 55 THEN 50
   WHEN CODE = 58 THEN 30
   WHEN CODE = 59 THEN 18
   WHEN CODE BETWEEN 60 AND 69 THEN 30
   WHEN CODE BETWEEN 70 AND 79 THEN 58
   WHEN CODE BETWEEN 80 AND 89 THEN 20
END

SELECT POS.* 
FROM POSITIONS POS
FULL OUTER JOIN 
(SELECT POSITIONS.ID_,VESSEL_ID,SPEED,MAX_SPEED,TYPE_ ,GEOM FROM POSITIONS
INNER JOIN VESSELS ON VESSELS.ID_ = POSITIONS.VESSEL_ID
INNER JOIN VESSELTYPES ON VESSELS.TYPE_=VESSELTYPES.CODE
WHERE SPEED>MAX_SPEED) DELETED
ON DELETED.ID_=POS.ID_
WHERE DELETED.ID_ IS NULL
ORDER BY VESSEL_ID, DT ASC

--Q11 We will tackle the challenge of segmenting the sequence of signals emitted by a ship. That is, to identify routes from port to port with the corresponding departure and arrival times.

--q11.ipynb

CREATE TABLE TRIPS (
	TRIP_ID INT, 
	VESSEL_ID VARCHAR,
	DEPARTURE CHAR(255), 
	ARRIVAL CHAR(255), 
	DEPARTURE_TIME TIMESTAMP, 
	ARRIVAL_TIME TIMESTAMP, 
	PRIMARY KEY(TRIP_ID)
);

COPY TRIPS(TRIP_ID,VESSEL_ID,DEPARTURE,ARRIVAL,DEPARTURE_TIME,ARRIVAL_TIME) 
FROM 'E:TRIP_DF.CSV'
WITH DELIMITER ',' CSV HEADER;

ALTER TABLE TRIPS --ADD FOREIGN KEYS
ADD FOREIGN KEY (VESSEL_ID) REFERENCES VESSELS(ID_);
